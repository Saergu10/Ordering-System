<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCACWAJYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6pooooAKKKo6vq1lpFq1xqFwkMY7sev0obtqxpNuyL1c14l8a
        aN4fjb7VcrJMOkMZBY15J41+Kl9qXm2uk5tbbJHmKfmYf0rzSeaS4kMkzs7nqzHJNeNis3hT92krv8D7
        HK+Ea2ISqYp8ke3X/gHqviD4xXlwGj0m0SFDwGkG4/lXB6r4p1TU2lN1KhEnUBAKw6K8StmFet8UtD7P
        CZDgcJbkp3fd6sdNI82PMOcdOKj2inUVyOTe7PVVOCVkizb3s8BQxvjYcjgV1GjfETW9Mf5GhkTOSGjH
        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
        4qrWqVnzVJNvzFoooqjMKKKKACiiigD/2Q==
</value>
  </data>
</root>